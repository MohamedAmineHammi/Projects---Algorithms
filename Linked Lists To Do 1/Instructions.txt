Linked Lists To Do 1


SList: Split on Value
Create splitOnVal(list,num) that, given number, splits a list in two. The latter half of the list should be returned, starting with node containing num. E.g.: splitOnVal(5) for the list (1=>3=>5=>2=>4) will change list to (1=>3), and the return value will be (5=>2=>4).



SList: Remove Negatives
Given a pointer to the head node of a singly linked list, remove any nodes containing negative values and return (a pointer to) the new list.



SList: Concat
Given two pointers to separate linked lists, concatenate the second list to the end of the first one, and return the new list.



SList: Partition
Create partition(ListNode,value) that locates the first node with that value, and moves all nodes with values less than that value to be earlier, and all nodes with values greater than that value to be later. Otherwise, the original order need not be perfectly reserved. Return the new head ListNode.