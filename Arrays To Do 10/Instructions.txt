Arrays To Do 10


Last Digit of A to the B
Modern computers can handle very large numbers, but they do have their limits. A number that is repeatedly multiplied by itself will eventually exceed a computerâ€™s ability to accurately represent it. (Note: the number of times it is multiplied by itself is called an exponent.) For an optional end-of-chapter challenge, determine the smallest (least significant) digit of a number that is potentially very, very large. You may find that you must do this without computing the actual (unimaginably large) number.

Implement a function lastDigitAtoB(a,b) that accepts two non-negative integers. It should return the last digit of a number found by raising the first number (a) to an exponent of the second number (b). Examples: given (3,4), you should return 1 (3 * 3 * 3 * 3 is 81, whose last digit is 1). Given (12,5), return 2 (which is the least significant digit of 248832: 12 * 12 * 12 * 12 * 12). How high can you scale your solution? For example, what is the return value for (237,124)?



Matrix Search
Mike digs image recognition and wants to create a JavaScript Imaging Library, just like PIL for Python. He is given 2 different two-dimensional arrays, containing integers between 0 and 65535. Each two-dimensional array represents a gray-scale image, where each integer value is a pixel. The second image might be found somewhere within the larger one. Return whether it is.


Second: Return location of first match found ([-1,-1] if no match). In example above, return [2,1].




Max of Subarray Sums
How efficient can you be in this following final challenge? The input may hold many million values.

Given a numerical array that is potentially very long, return the maximum sum of values from a subarray. Any consecutive sequence of indices in the array is considered a subarray. Create a function that returns the highest sum possible from these subarrays. Given [1,2,-4,3,-2,3,-1], you should return 4 (for subarray [3,-2,3]), and given [-1,-2,-4,-3,-2,-3], return 0 (for []). This problem has many possible implementations. Which do you prefer & why?